{"version":3,"sources":["function/getCookie.js","function/writeCookie.js","store/actions/index.js","pages/Home.js","pages/About.js","pages/Page404.js","App.js","serviceWorker.js","store/reducers/app/updateTheme.js","store/reducers/app/index.js","store/reducers/index.js","store/index.js","i18n.js","index.js"],"names":["getCookie","name","parts","document","cookie","split","length","pop","shift","writeCookie","data","toString","primaryTheme","background","textColor","button","darkTheme","updateTheme","themeName","themeColors","type","Home","Component","About","Page404","Content","styled","div","props","theme","LanguageButton","Label","label","App","state","language","changeLanguage","setState","i18n","handleChangeTheme","changeTheme","readThemeCookie","this","now_language_cookie","getThemeSuccessfully","className","console","log","t","onClick","style","onChange","checked","to","exact","path","React","connect","setAppActive","app","active","dispatch","setApp","Boolean","window","location","hostname","match","initialState","reducers","combineReducers","index","action","createStore","composeWithDevTools","applyMiddleware","thunk","resources","en","translation","zhTW","use","initReactI18next","init","lng","fallbackLng","interpolation","escapeValue","ReactDOM","render","store","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d30bd3ec.chunk.js","sourcesContent":["const getCookie = name => {\r\n  var value = '; ' + document.cookie;\r\n  var parts = value.split('; ' + name + '=');\r\n  if (parts.length === 2) {\r\n    return parts\r\n      .pop()\r\n      .split(';')\r\n      .shift();\r\n  }\r\n};\r\n\r\nexport default getCookie;\r\n","//name : type string\r\nconst writeCookie = (name, data) => {\r\n  document.cookie = name.toString() + '=' + data + ';path=/';\r\n  return;\r\n};\r\n\r\nexport default writeCookie;\r\n","import getCookie from \"../../function/getCookie\";\r\nimport writeCookie from \"../../function/writeCookie\";\r\n\r\n// 基本型\r\nexport const setApp = () => {\r\n  return {\r\n    type: \"SET_APP\"\r\n  };\r\n};\r\n\r\n// 呼叫其他 action 型\r\nexport const selectLv1Option = index => async dispatch => {\r\n  await dispatch(setApp(index));\r\n};\r\n\r\n// 執行多件 function 型\r\nexport const fetchProduct = cbu => async dispatch => {\r\n  fetch(`/shopping/v1/compositions/productDetails/info/${cbu}`, {\r\n    credentials: \"include\",\r\n    headers: { \"content-type\": \"application/json\" },\r\n    mode: \"cors\"\r\n  })\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      console.log(data);\r\n    });\r\n};\r\n\r\nconst primaryTheme = {\r\n  background: \"#FFFFFF\",\r\n  textColor: \"#000000\",\r\n  button: \"red\"\r\n};\r\n\r\nconst darkTheme = {\r\n  background: \"#2F2F2F\",\r\n  textColor: \"#CCCCCC\",\r\n  button: \"darkred\"\r\n};\r\n\r\nexport const readThemeCookie = () => dispatch => {\r\n  // 更換網站介面顏色\r\n  const theme_cookie = getCookie(\"theme\");\r\n  if (!theme_cookie) {\r\n    // 1. 預設主題顏色為亮色\r\n    writeCookie(\"theme\", \"primary\");\r\n    const themeName = \"primary\";\r\n    const themeColors = primaryTheme;\r\n    dispatch(updateTheme(themeName, themeColors));\r\n  } else {\r\n    // 1. 抓取目前的主題顏色\r\n    const themeName = getCookie(\"theme\");\r\n    const themeColors = themeName === \"primary\" ? primaryTheme : darkTheme;\r\n    dispatch(updateTheme(themeName, themeColors));\r\n  }\r\n};\r\n\r\nexport const changeTheme = themeName => dispatch => {\r\n  if (themeName === \"primary\") {\r\n    const themeColors = primaryTheme;\r\n    writeCookie(\"theme\", themeName);\r\n    dispatch(updateTheme(themeName, themeColors));\r\n  } else {\r\n    const themeColors = darkTheme;\r\n    writeCookie(\"theme\", themeName);\r\n    dispatch(updateTheme(themeName, themeColors));\r\n  }\r\n};\r\n\r\nexport const updateTheme = (themeName, themeColors) => {\r\n  return {\r\n    type: \"UPDATE_THEME\",\r\n    themeName,\r\n    themeColors\r\n  };\r\n};\r\n","import React, { Component } from \"react\";\r\n\r\nexport class Home extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Home Page</h1>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React, { Component } from \"react\";\r\n\r\nexport class About extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>About Page</h1>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default About;\r\n","import React, { Component } from \"react\";\r\n\r\nexport class Page404 extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Page404</h1>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Page404;\r\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n// Redux\nimport { connect } from \"react-redux\";\nimport { setApp, readThemeCookie, changeTheme } from \"./store/actions\";\n// i18n\nimport { Translation } from \"react-i18next\";\nimport i18n from \"i18next\";\n// Router\nimport { HashRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n// Style-Components\nimport styled from \"styled-components\";\n// Pages\nimport Home from \"./pages/Home\";\nimport About from \"./pages/About\";\nimport Page404 from \"./pages/Page404\";\n// function\nimport getCookie from \"./function/getCookie\";\nimport writeCookie from \"./function/writeCookie\";\n\nconst Content = styled.div`\n  max-width: 1280px;\n  margin: 0 auto;\n  padding: 35px 15px;\n  background: ${props => props.theme.background};\n`;\n\nconst LanguageButton = styled.button`\n  min-width: 250px;\n  padding: 12px;\n  background: #111111;\n  color: #ffffff;\n  font-size: 14px;\n  border: 0;\n  margin-bottom: 0.5rem;\n`;\n\nconst Label = styled.label`\n  position: relative;\n  width: 70px;\n  height: 35px;\n  display: block;\n  cursor: pointer;\n  div {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    border: 1px solid #ccc;\n    background: #e9e9e9;\n    border-radius: 50px;\n    transition: all 300ms;\n  }\n  div::after {\n    content: \"\";\n    display: block;\n    position: absolute;\n    width: 30px;\n    height: 30px;\n    background: white;\n    border-radius: 50%;\n    border: 1px solid #ccc;\n    top: 50%;\n    transform: translateY(-50%);\n    transition: all 300ms;\n    left: 0;\n  }\n  input[type=\"checkbox\"] {\n    display: none;\n  }\n  input[type=\"checkbox\"]:checked ~ div {\n    background: #4bd162;\n  }\n  input[type=\"checkbox\"]:checked ~ div::after {\n    left: 100%;\n    transform: translateY(-50%) translateX(-100%);\n  }\n`;\n\nclass App extends React.Component {\n  state = {\n    language: \"zhTW\"\n  };\n\n  componentDidMount() {\n    const { readThemeCookie } = this.props;\n    // 設置語言包\n    // 1. 抓取語言的Cookie\n    const language_cookie = getCookie(\"language\");\n    if (!language_cookie) {\n      // 2. 沒有語言的Cookie的話先設定預設為zhTW\n      writeCookie(\"language\", \"zhTW\");\n    } else {\n      // 3. 有語言的Cookie的話便抓取\n      const now_language_cookie = getCookie(\"language\");\n      this.setState({\n        language: now_language_cookie\n      });\n      i18n.changeLanguage(now_language_cookie);\n    }\n    readThemeCookie();\n  }\n\n  changeLanguage = () => {\n    if (this.state.language === \"zhTW\") {\n      // 修改為繁體中文\n      this.setState({\n        language: \"en\"\n      });\n      i18n.changeLanguage(\"en\");\n      writeCookie(\"language\", \"en\");\n    } else {\n      // 修改為英文\n      this.setState({\n        language: \"zhTW\"\n      });\n      i18n.changeLanguage(\"zhTW\");\n      writeCookie(\"language\", \"zhTW\");\n    }\n  };\n\n  handleChangeTheme = () => {\n    const { changeTheme, themeName } = this.props;\n    if (themeName === \"primary\") {\n      // 切換為暗色主題\n      changeTheme(\"dark\");\n    } else {\n      // 切換為亮色主題\n      changeTheme(\"primary\");\n    }\n  };\n\n  render() {\n    const { getThemeSuccessfully, themeName, themeColors } = this.props;\n    return (\n      getThemeSuccessfully && (\n        <Content className=\"transition\">\n          {console.log(themeColors)}\n          <style>{`\n          body{\n            background: ${themeColors.background};\n            color: ${themeColors.textColor};\n          }\n          `}</style>\n          <Translation>{t => <h1>{t(\"app.hello\")}</h1>}</Translation>\n          <LanguageButton\n            onClick={this.changeLanguage}\n            style={{ background: themeColors.button }}\n          >\n            點擊切換語言，目前語言為：{this.state.language}\n          </LanguageButton>\n          <Label>\n            <input\n              type=\"checkbox\"\n              onChange={this.handleChangeTheme}\n              checked={themeName === \"dark\"}\n            />\n            <div />\n          </Label>\n          <Router>\n            <div>\n              <nav>\n                <ul>\n                  <li>\n                    <Link to=\"/\">\n                      -<Translation>{t => <>{t(\"app.home\")}</>}</Translation>\n                    </Link>\n                  </li>\n                  <li>\n                    <Link to=\"/about\">\n                      -<Translation>{t => <>{t(\"app.about\")}</>}</Translation>\n                    </Link>\n                  </li>\n                  <li>\n                    <Link to=\"/users\">\n                      -<Translation>{t => <>{t(\"app.users\")}</>}</Translation>\n                    </Link>\n                  </li>\n                </ul>\n              </nav>\n              <Switch>\n                <Route exact path=\"/\">\n                  <Home />\n                </Route>\n                <Route path=\"/about\">\n                  <About />\n                </Route>\n                <Route path=\"*\">\n                  <Page404 />\n                </Route>\n              </Switch>\n            </div>\n          </Router>\n        </Content>\n      )\n    );\n  }\n}\n\nApp.propTypes = {\n  setApp: PropTypes.func,\n  setAppActive: PropTypes.bool,\n  readThemeCookie: PropTypes.func,\n  themeName: PropTypes.string,\n  themeColors: PropTypes.object,\n  getThemeSuccessfully: PropTypes.bool,\n  changeTheme: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  setAppActive: state.app.active,\n  themeName: state.app.updateTheme.themeName,\n  themeColors: state.app.updateTheme.themeColors,\n  getThemeSuccessfully: state.app.updateTheme.getThemeSuccessfully\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setApp: () => dispatch(setApp()),\n    readThemeCookie: () => dispatch(readThemeCookie()),\n    changeTheme: themeName => dispatch(changeTheme(themeName))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initialState = {\r\n  getThemeSuccessfully: false,\r\n  themeName: \"primary\"\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"UPDATE_THEME\":\r\n      return {\r\n        ...state,\r\n        getThemeSuccessfully: true,\r\n        themeName: action.themeName,\r\n        themeColors: action.themeColors\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport updateTheme from \"./updateTheme\";\r\n\r\nconst initialState = {\r\n  active: true\r\n};\r\n\r\nconst index = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"SET_APP\":\r\n      return {\r\n        ...state,\r\n        active: false\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst reducers = combineReducers({\r\n  index,\r\n  updateTheme\r\n});\r\n\r\nexport default reducers;\r\n","import { combineReducers } from \"redux\";\r\n// import * as ActionTypes from \"../actionTypes\";\r\nimport app from \"./app\";\r\n\r\nconst reducers = combineReducers({\r\n  app\r\n});\r\n\r\nexport default reducers;\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension/developmentOnly\";\r\nimport reducers from \"./reducers\";\r\n\r\nexport default createStore(\r\n  reducers,\r\n  composeWithDevTools(applyMiddleware(thunk))\r\n);\r\n","import i18n from \"i18next\";\r\nimport { initReactI18next } from \"react-i18next\";\r\nimport en from \"./locales/en.json\";\r\nimport tw from \"./locales/zhTW.json\";\r\n\r\nconst resources = {\r\n  en: {\r\n    translation: en\r\n  },\r\n  zhTW: {\r\n    translation: tw\r\n  }\r\n};\r\n\r\ni18n.use(initReactI18next).init({\r\n  resources,\r\n  lng: \"zhTW\", //預設語言\r\n  fallbackLng: \"zhTW\", //如果當前切換的語言沒有對應的翻譯則使用這個語言，\r\n  interpolation: {\r\n    escapeValue: false\r\n  }\r\n});\r\nexport default i18n;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n// 載入i18n語言包設定\nimport \"./i18n\";\n// 解決 IE 瀏覽器問題的套件\nimport \"babel-polyfill\";\nimport \"isomorphic-fetch\";\nimport \"react-app-polyfill/ie11\";\nimport \"react-app-polyfill/stable\";\nimport \"core-js/features/promise\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}